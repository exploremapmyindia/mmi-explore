{
  "openapi": "3.0.1",
  "info": {
    "title": "MapmyIndia Explore APIs",
    "description": "<h2>Security Type</h2> <p>This APIs follow OAuth2 based security. <b>To know more on how to create your authorization tokens, please click the `Authorize` button below. More details available <a href=https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php>here</a></b> </br><li><a href=https://www.mapmyindia.com/api/login>Login/Sing Up</a> for API key and other access.<p></br>",
    "termsOfService": "https://www.mapmyindia.com/api/terms-&-conditions",
    "contact": {
      "name": "MapmyIndia API Support",
      "url": "https://www.mapmyindia.com/api/#f_cont",
      "email": "apisupport@mapmyindia.com"
    },
    "version": "v2.1.0"
  },
  "externalDocs": {
    "description": "Find out more about MapmyIndia APIs",
    "url": "https://www.mapmyindia.com/api/advanced-maps/doc/interactive-map-api"
  },
  "servers": [
    {
      "url": "http://explore-uat.mapmyindia.in/api",
      "description": "UAT"
    },
    {
      "url": "http://exp.mapmyindia.in/api",
      "description": "PreProd"
    },
    {
      "url": "https://explore.mapmyindia.com/api",
      "description": "Prod"
    }
  ],
  "tags": [
    {
      "name": "Claim a Business"
    },
    {
      "name": "Image"
    },
    {
      "name": "List"
    },
    {
      "name": "Place"
    },
    {
      "name": "Report"
    },
    {
      "name": "Review"
    },
    {
      "name": "User"
    }
  ],
  "paths": {
    "/{version}/places/{eloc}/placedetails": {
      "get": {
        "tags": [
          "Place",
          "Claim a Business"
        ],
        "summary": "Detail of a place",
        "description": "This API gives the general details of that particular place id (eLoc) with keyinfo.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "required": true,
            "example": "1T182A",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-PlaceDetail-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/claim": {
      "post": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Create Claim",
        "requestBody": {
          "description": "Request Body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POST-CreateClaim-Request"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No COntent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/places/{claimId}/claim": {
      "patch": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Update Claim",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "2.1.0.0"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Unique Claim ID.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "MMI000"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ankit123@gmail.com"
                  },
                  "phone no": {
                    "type": "string",
                    "example": 9865458877
                  },
                  "platform": {
                    "type": "string",
                    "example": "104"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No COntent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/places/{claimId}/claimStatusUpdate": {
      "patch": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Update Claim Status",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Unique Claim ID.",
            "example": "cfb55f94-4187-4edb-8239-5b0704e4ffcf",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "0 (Fresh) , 1(Approve) , 2(Disapprove) , 3(Re-claim)",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/enquiry": {
      "get": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Place Enquiry",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "example": "MMI000",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-PlaceEnquiry-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Create Enquiry",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "example": "2.1.0.0",
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "example": "OAFEAT",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POST-CreateEnquiry-Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/reportCatMaster": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Report Category Master",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "\",\"(Comma) separated id of Categories OR null in case of all categories requried.",
            "required": false,
            "allowEmptyValue": true,
            "example": 6,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report-GET-reportCatMaster-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{reportId}/reports": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Single Report Details",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "Unique Report ID",
            "required": true,
            "allowEmptyValue": false,
            "example": 6,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report-GET-SingleReportDetails-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/report/nearby": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Nearby Reports",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "zoom",
            "in": "query",
            "description": "zoom",
            "required": false,
            "allowEmptyValue": true,
            "example": 11,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "parentCategory",
            "in": "query",
            "description": "Id of Parent Category",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "childCategory",
            "in": "query",
            "description": "Id of Child Category",
            "required": false,
            "allowEmptyValue": true,
            "example": 6,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report-GET-NearbyReports-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/placeReport": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "All Report at a Place",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report-GET-AllReportsAtAPlace-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/categories": {
      "get": {
        "tags": [
          "Place"
        ],
        "summary": "Place Categories",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catCode",
            "in": "query",
            "description": "Id's of Categories.",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Place-GET-PlaceCategories-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/add": {
      "post": {
        "tags": [
          "Place"
        ],
        "summary": "Add a Place",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Place-POST-AddAPlace-Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthtorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/relation": {
      "get": {
        "tags": [
          "Claim a Business",
          "Place"
        ],
        "summary": "Relation with User",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-RelationWithUser-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/review": {
      "get": {
        "tags": [
          "Claim a Business",
          "Review"
        ],
        "summary": "All Review at a Place",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting of results by date ascending or descending.",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "example": "date:desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-AllReviewAtAPlace-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Create Review",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "placeName",
                  "latitude",
                  "longitude",
                  "rating",
                  "platform"
                ],
                "properties": {
                  "alt": {
                    "type": "integer",
                    "description": "Altitude of the user’s location, in meters.",
                    "example": 0
                  },
                  "altAcc": {
                    "type": "integer",
                    "description": "Vertical accuracy of the user’s location, in meters.",
                    "example": 0
                  },
                  "broadcast": {
                    "type": "string",
                    "description": "Who to broadcast this review. Accepts a comma-separated list of values (public, private, followers, followings). If no valid value is found, the default is public.",
                    "example": "public"
                  },
                  "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Latitude of the user’s location.",
                    "example": 28.655283
                  },
                  "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Longitude of the user’s location.",
                    "example": 77.240818
                  },
                  "placeName": {
                    "type": "string",
                    "description": "Name of the place or event.",
                    "example": "Mapmyindia"
                  },
                  "platform": {
                    "type": "integer",
                    "description": "Platfrom from which request is being made.<br> Allowed values- 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)",
                    "enum": [
                      "101(Android)",
                      "104(IOS)",
                      "111(ExploreWeb)",
                      "112(MapWeb)",
                      "121(Traffic)"
                    ],
                    "example": 101
                  },
                  "rating": {
                    "type": "integer",
                    "description": "Rating assigned by user.<br> Allowed values- 1, 2, 3, 4, 5",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/status": {
      "post": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Create Status",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "placeStatus": {
                    "type": "string",
                    "example": "Test status"
                  },
                  "platform": {
                    "type": "string",
                    "example": "104"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{enquiryId}/enquiry": {
      "patch": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Update Enquiry",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enquiryId",
            "in": "path",
            "description": "6 character unique place identifier.",
            "example": "54d1bded-1302-4a72-98f6-0dc133fcdbe9",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PATCH-UpdateEnquiry-Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/places/{pinId}/{type}": {
      "get": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Get Respond/Comment on Pin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pinId",
            "in": "path",
            "example": "f83ba686-1183-4b81-9582-20a418e7e485",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "comment( General user )/ respond( Manager/claimant )",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-GetRespondCommentOnPin-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Set Respond/Comment on Pin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pinId",
            "in": "path",
            "description": "Unique Pin ID",
            "example": "f83ba686-1183-4b81-9582-20a418e7e485",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "comment( General user )/ respond( Manager/claimant )",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Comment Request Body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "Example of comment on Pin"
                  },
                  "platform": {
                    "type": "string",
                    "example": "104"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/users/claims": {
      "get": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "User Claims",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-UserClaims-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/users/enquiry": {
      "get": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "User Enquiries",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-UserEnquiries-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/<enquiryId>/enquiry": {
      "delete": {
        "tags": [
          "Claim a Business"
        ],
        "summary": "Delete Enquiry",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "example": "2.1.0.0",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enquiryId",
            "in": "path",
            "description": "Unique Enquiry ID.",
            "example": "54d1bded-1302-4a72-98f6-0dc133fcdbe9",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/places/image": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Upload Image",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "[place,report,review,atlas,comment,claim,respond,enquiry]",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "query",
            "description": "6 character unique place identifier.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pinId",
            "in": "query",
            "description": "Unique Pin ID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "images",
            "in": "query",
            "description": "Images",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/assets": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Images at a Place",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-ImagesAtAPlace-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/report": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Create Report",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "2.1.0.0"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "6TB2B2"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Report-POST-CreateReport-Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/report/{reportId}": {
      "patch": {
        "tags": [
          "Report"
        ],
        "summary": "Update Report",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "Unique ID of Report",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportRequest",
            "in": "header",
            "description": "Report Request Body",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "$ref": "#/components/schemas/Report-PATCH-UpdateReport-Request"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "platform"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Wow description"
                  },
                  "parentCategory": {
                    "type": "integer",
                    "description": "2"
                  },
                  "childCategory": {
                    "type": "integer",
                    "description": "13"
                  },
                  "platform": {
                    "type": "integer",
                    "description": "101"
                  },
                  "expiry": {
                    "type": "number",
                    "format": "long",
                    "description": "10202021"
                  },
                  "broadcast": {
                    "type": "string",
                    "description": "public"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/users/report": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "All Reports of a User",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report-GET-AllReportsOfAUser-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/route/reports": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Route Report Summary",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routetId",
            "in": "query",
            "description": "Route ID",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeIdx",
            "in": "query",
            "description": "Route Index",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "in": "query",
            "description": "Node ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Categories",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-RouteReportSummary-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/review/{reviewId}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Single Review Details",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "description": "Unique Review ID.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review-GET-SingleReviewDetails-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Review"
        ],
        "summary": "Update Review",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Current version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "description": "Unique Review ID.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "rating",
                  "broadcast",
                  "description",
                  "platform"
                ],
                "properties": {
                  "broadcast": {
                    "type": "string",
                    "description": "Who to broadcast this review. Accepts a comma-separated list of values (public, private, followers, followings). If no valid value is found, the default is public.",
                    "example": "public"
                  },
                  "rating": {
                    "type": "integer",
                    "description": "Rating assigned by user.<br> Allowed values- 1, 2, 3, 4, 5",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": 5
                  },
                  "description": {
                    "type": "string",
                    "description": "A message about your event.<br> Size range- 10..250",
                    "example": "good place"
                  },
                  "platform": {
                    "type": "integer",
                    "description": "Platfrom from which request is being made.<br> Allowed values- 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)",
                    "enum": [
                      "101(Android)",
                      "104(IOS)",
                      "111(ExploreWeb)",
                      "112(MapWeb)",
                      "121(Traffic)"
                    ],
                    "example": 101
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/users/review": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "All Review of a User",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting of results by date ascending or descending.",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "example": "date:desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review-GET-AllReviewOfAUser-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/review/<reviewId>": {
      "delete": {
        "tags": [
          "Review"
        ],
        "summary": "Delete Review",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/No-Content"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/places/report/<reportId>": {
      "delete": {
        "tags": [
          "Report"
        ],
        "summary": "Delete Report",
        "description": "This API allows you to delete an existing report.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/No-Content"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/places/userpoints": {
      "get": {
        "tags": [
          "Place"
        ],
        "summary": "Leader Dashboard",
        "description": "This API allows you to get counts of all activity done by all Users.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Place-GET-Leader-Dashboard-Response"
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "404": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/places/asset": {
      "post": {
        "tags": [
          "Place"
        ],
        "summary": "Upload Assets",
        "description": "This API allows you to upload files of different media type on a place or pin.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "eloc",
                  "platform",
                  "files[]"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type on which assets are uploaded( place or pin) . <br>Allowed values- place, report, review, atlas, comment, claim, respond, enquiry",
                    "enum": [
                      "place",
                      "report",
                      "review",
                      "atlas",
                      "comment",
                      "claim",
                      "respond",
                      "enquiry"
                    ],
                    "example": "place"
                  },
                  "eloc": {
                    "type": "string",
                    "description": "Eloc of the place.",
                    "example": "MMI000"
                  },
                  "pinId": {
                    "type": "string",
                    "description": "Id of the pin(report,review,atlas,comment,claim,respond,enquiry) on which assets are uploaded. Optional if type = place, otherwise mandatory.",
                    "example": "5e82b2c1-08b2-4d04-9391-630c184bb06c"
                  },
                  "platform": {
                    "type": "integer",
                    "description": "Platfrom from which request is being made. <br>Allowed values- 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)",
                    "enum": [
                      "101(Android)",
                      "104(IOS)",
                      "111(ExploreWeb)",
                      "112(MapWeb)",
                      "121(Traffic)"
                    ],
                    "example": 101
                  },
                  "files[]": {
                    "type": "string",
                    "description": "Files attached by the user. To upload Multiple files use 'files' parameter as, files[0]='file1', files[1]='file2' ... (Max File Size is 6MB) <br>Allowed values- Image(.jpg, .jpeg, .png, .gif), Video(.mp4, .3gp, .avi), Audio(.mp3, .wav, .wave, .ogg, .mpeg), Documents(.pdf, .csv, .txt, .plain, .docx)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/user/list": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Create List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listRequest",
            "in": "header",
            "description": "List Request body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/List-POST-CreateList-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{eloc}/listitem": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Add Item to List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eloc",
            "in": "path",
            "description": "6 character unique place identifier.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listItemRequest",
            "in": "header",
            "description": "List Item Request body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/List-POST-AddItemToList-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/{userName}/listitem/{listId}": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "All Items of a List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "User Name",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Unique ID of List",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-AllItemsOfAList-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/listitem": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "All Saved Items",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Pagination",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-AllSavedItems-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/users/{userName}/list": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "All List of a User",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "User Name",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "allowEmptyValue": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "number of results per page",
            "required": false,
            "allowEmptyValue": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GET-AllListOfAUser-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/places/listitem/{itemId}": {
      "delete": {
        "tags": [
          "List"
        ],
        "summary": "Delete Item from List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "Unique ID of Item",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/users/list/follow": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "Follow List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "query",
            "description": "Unique List ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/users/list/unfollow": {
      "delete": {
        "tags": [
          "List"
        ],
        "summary": "Unfollow List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "query",
            "description": "Unique ID of List",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/users/list/{listId}": {
      "patch": {
        "tags": [
          "List"
        ],
        "summary": "Update List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Unique ID of List",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placeRequest",
            "in": "header",
            "description": "Place Request Body",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "$ref": "#/components/schemas/List-PATCH-UpdateList-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "List"
        ],
        "summary": "Delete List",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Unique ID of List",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/{version}/users/<userName>/activity": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Activity Of A User",
        "description": "This API allows you to get counts of all activity done by a user.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Object with activity detail.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Get-User-Activity-Of-A-User-Response"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/<userName>/followers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "All followers Of A User",
        "description": "This API allows you to get all followers of a user.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Name of the user.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page number.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "No of records per page.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-All-followers-Of-A-User-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/<userName>/following": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "All followings Of A User",
        "description": "This API allows you to get all followings of a user.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Name of the user.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page number.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "No of records per page.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get-User-All-following-Of-A-User-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/<placeId>/home": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Set Home",
        "description": "This API allows set any place as home.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "entryLatitude",
                  "entryLongitude",
                  "latitude",
                  "longitude",
                  "placeName",
                  "platform"
                ],
                "properties": {
                  "entryLatitude": {
                    "type": "number",
                    "format": "double",
                    "description": "0"
                  },
                  "entryLongitude": {
                    "type": "number",
                    "format": "double",
                    "example": 0
                  },
                  "latitude": {
                    "type": "number",
                    "format": "double",
                    "example": 28.550716,
                    "description": "Latitude of the place."
                  },
                  "longitude": {
                    "type": "number",
                    "format": "double",
                    "example": 77.268928
                  },
                  "placeName": {
                    "type": "string",
                    "example": "Mapmyindia Head Office New Delhi, 237, Okhla Industrial Estate Phase 3, Near Modi Mill, New Delhi, Delhi, 110020"
                  },
                  "platform": {
                    "type": "integer",
                    "description": "Platfrom from which request is being made.\nAllowed values: 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)",
                    "example": 101
                  },
                  "openingHours": {
                    "type": "object",
                    "properties": {
                      "monday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "opens": {
                              "type": "string",
                              "example": "9:00 AM"
                            },
                            "closes": {
                              "type": "string",
                              "example": "8:30 PM"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/<placeId>/office": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Set Office",
        "description": "This API allows set any place as office.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "entryLatitude",
                  "entryLongitude",
                  "latitude",
                  "longitude",
                  "placeName",
                  "platform"
                ],
                "properties": {
                  "entryLatitude": {
                    "type": "number",
                    "format": "double",
                    "description": "0"
                  },
                  "entryLongitude": {
                    "type": "number",
                    "format": "double",
                    "example": 0
                  },
                  "latitude": {
                    "type": "number",
                    "format": "double",
                    "example": 28.550716
                  },
                  "longitude": {
                    "type": "number",
                    "format": "double",
                    "example": 77.268928
                  },
                  "placeName": {
                    "type": "string",
                    "example": "Mapmyindia Head Office New Delhi, 237, Okhla Industrial Estate Phase 3, Near Modi Mill, New Delhi, Delhi, 110020"
                  },
                  "platform": {
                    "type": "integer",
                    "example": 101
                  },
                  "openingHours": {
                    "type": "object",
                    "properties": {
                      "monday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "opens": {
                              "type": "string",
                              "example": "9:00 AM"
                            },
                            "closes": {
                              "type": "string",
                              "example": "8:30 PM"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/flag": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Flag",
        "description": "This API allows to flag any pins.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pinId",
                  "violationDesc",
                  "violationType",
                  "platform"
                ],
                "properties": {
                  "pinId": {
                    "type": "string",
                    "description": "8b4119a328cf6685d5bf1c68abfb7023"
                  },
                  "platform": {
                    "type": "integer",
                    "description": "Platfrom from which request is being made. <br>Allowed values- 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)",
                    "enum": [
                      "101(Android)",
                      "104(IOS)",
                      "111(ExploreWeb)",
                      "112(MapWeb)",
                      "121(Traffic)"
                    ]
                  },
                  "violationDesc": {
                    "type": "string",
                    "description": "testing...........................!"
                  },
                  "violationType": {
                    "type": "integer",
                    "description": "2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/<userName>/myjourney": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "My Journey",
        "description": "This API allows you to get all journey of a user.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "path",
            "description": "Name of the user.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "pinType(review, report)",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page number.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "No of records per page.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get-User-My-Journey-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "404": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/myworld": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "My World",
        "description": "This API allows you to get all activities happening within passed bound.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "centreX",
            "in": "query",
            "description": "Center x coordinate.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "centreY",
            "in": "query",
            "description": "Center y coordinate.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minX",
            "in": "query",
            "description": "Minimum x coordinate.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minY",
            "in": "query",
            "description": "Minimum y coordinate.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxX",
            "in": "query",
            "description": "Maximum x coordinate.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxY",
            "in": "query",
            "description": "Maximum y coordinate.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page number.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "No of records per page.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get-User-My-World-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "404": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/contribution": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "My Contribution",
        "description": "This API allows you to get all contributions of a user.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "userName of the user to be followed.",
            "required": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get-User-My-Contribution-Response"
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/like": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Like OR Unlike",
        "description": "This API allows to like/unlike any pins.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pinId",
                  "status",
                  "platform"
                ],
                "properties": {
                  "pinId": {
                    "type": "string",
                    "description": "Id of the pin.",
                    "example": "5e82b2c1-08b2-4d04-9391-630c184bb06c"
                  },
                  "status": {
                    "type": "integer",
                    "description": "Allowed values- 0(unlike), 1(like)",
                    "enum": [
                      "0(unlike)",
                      "1(like)"
                    ],
                    "example": 0
                  },
                  "platform": {
                    "type": "integer",
                    "description": "Platfrom from which request is being made. <br>Allowed values- 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)",
                    "enum": [
                      "101(Android)",
                      "104(IOS)",
                      "111(ExploreWeb)",
                      "112(MapWeb)",
                      "121(Traffic)"
                    ],
                    "example": 101
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/feedback": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send feedbacks",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "submittedBy",
                  "platform",
                  "file"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Allowed values (BUG, IOTBUG, TASK, STORY)",
                    "enum": [
                      "BUG",
                      "IOTBUG",
                      "TASK",
                      "STORY"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Feedback description"
                  },
                  "submittedBy": {
                    "type": "string",
                    "description": "A valid email id or phone number"
                  },
                  "appVersion": {
                    "type": "string",
                    "description": "Version of the app"
                  },
                  "osVersion": {
                    "type": "string",
                    "description": "Version of the os"
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "Name of the device"
                  },
                  "platform": {
                    "type": "string",
                    "description": "Allowed values (MOVE_ANDROID, MOVE_IOS, MOVE_WEB, SCHOOL_BUS_ANDROID, SCHOOL_BUS_IOS, WORKMATE_ANDROID, WORKMATE_IOS, WORKMATE_WEB, INTOUCH_WEB)",
                    "enum": [
                      "MOVE_ANDROID",
                      "MOVE_IOS",
                      "MOVE_WEB",
                      "SCHOOL_BUS_ANDROID",
                      "SCHOOL_BUS_IOS",
                      "WORKMATE_ANDROID",
                      "WORKMATE_IOS",
                      "WORKMATE_WEB",
                      "INTOUCH_WEB"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{version}/users/follow": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Follow",
        "description": "This API allows to follow any user.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "followRequest",
            "in": "header",
            "description": "user can request follow the user name.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "followTo",
                  "platform"
                ],
                "properties": {
                  "followTo": {
                    "type": "string",
                    "description": "userName of the user to be followed",
                    "example": "ankit1993"
                  },
                  "platform": {
                    "type": "integer",
                    "description": "Platfrom from which request is being made. <br>Allowed values- 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)",
                    "enum": [
                      "101(Android)",
                      "104(IOS)",
                      "111(ExploreWeb)",
                      "112(MapWeb)",
                      "121(Traffic)"
                    ],
                    "example": 101
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/users/unfollow/<userName>": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Unfollow",
        "description": "This API allows you to unfollow any user from following list.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client-Error-Response"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invalid-Token-Response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal-Server-Error-Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Report-GET-AllReportsOfAUser-Response": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "5e82b2c1-08b2-4d04-9391-630c184bb06c"
                },
                "placeName": {
                  "type": "string",
                  "example": "New Delhi"
                },
                "eventId": {
                  "type": "integer",
                  "example": null
                },
                "placeId": {
                  "type": "string",
                  "example": "2P7AWX"
                },
                "description": {
                  "type": "string",
                  "example": "Report a issue."
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 28.667701
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.181342
                },
                "parentCategory": {
                  "type": "integer",
                  "example": "5"
                },
                "childCategory": {
                  "type": "integer",
                  "example": "87"
                },
                "subChildCategory": {
                  "type": "integer",
                  "example": null
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "format": "long",
                  "example": 1612942276
                },
                "addedBy": {
                  "type": "string",
                  "example": "ishar081"
                },
                "addedByName": {
                  "type": "string",
                  "example": "isha"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/ishar081/avatar"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": null
                  }
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": null
                  }
                },
                "audios": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": null
                  }
                },
                "source": {
                  "type": "string",
                  "example": null
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 0
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "usersCount": {
                  "type": "integer",
                  "example": null
                },
                "picturesCount": {
                  "type": "integer",
                  "example": null
                },
                "audiosCount": {
                  "type": "integer",
                  "example": null
                },
                "videosCount": {
                  "type": "integer",
                  "example": null
                },
                "thumbnail": {
                  "type": "integer",
                  "example": null
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 48
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 5
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "baseURLObj": {
            "type": "object",
            "properties": {
              "assets": {
                "type": "string",
                "example": "https://anchor.mapmyindia.com/api/users/"
              }
            }
          }
        }
      },
      "Report-GET-SingleReportDetails-Response": {
        "type": "object",
        "properties": {
          "baseURLObj": {
            "type": "object",
            "properties": {
              "assets": {
                "type": "string",
                "example": "https://anchor.mapmyindia.com/api/users/"
              }
            }
          },
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "825988d2-0ae9-4072-bd72-4ec5aa2a0b6b"
                },
                "placeName": {
                  "type": "string",
                  "example": "Okhla Industrial Estate Phase 3, New Delhi, Delhi. 17 m from MapmyIndia Head Office New Delhi pin-110020"
                },
                "eventId": {
                  "type": "integer",
                  "example": null
                },
                "placeId": {
                  "type": "string",
                  "example": "MMI000"
                },
                "description": {
                  "type": "string",
                  "example": "Reported By Car Play."
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 28.550566729784187
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.26892202866581
                },
                "parentCategory": {
                  "type": "integer",
                  "example": "2"
                },
                "childCategory": {
                  "type": "integer",
                  "example": "15"
                },
                "subChildCategory": {
                  "type": "integer",
                  "example": null
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "format": "long",
                  "example": 1613042553
                },
                "addedBy": {
                  "type": "string",
                  "example": "akshat_1570612631"
                },
                "addedByName": {
                  "type": "string",
                  "example": "Akshat Mathur"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/akshat_1570612631/avatar"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "audios": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "source": {
                  "type": "string",
                  "example": null
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 0
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "usersCount": {
                  "type": "integer",
                  "example": null
                },
                "picturesCount": {
                  "type": "integer",
                  "example": null
                },
                "audiosCount": {
                  "type": "integer",
                  "example": null
                },
                "videosCount": {
                  "type": "integer",
                  "example": null
                },
                "thumbnail": {
                  "type": "integer",
                  "example": null
                },
                "managerStatus": {
                  "type": "string",
                  "example": null
                }
              }
            }
          }
        }
      },
      "Report-POST-CreateReport-Request": {
        "type": "object",
        "required": [
          "placeName",
          "latitude",
          "longitude",
          "platform",
          "parentCategory",
          "childCategory"
        ],
        "properties": {
          "description": {
            "type": "string",
            "example": "Community Electricity Failure report"
          },
          "placeName": {
            "type": "string",
            "example": "General Hospital Government Blood Bank"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 13.041271
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 80.276905
          },
          "parentCategory": {
            "type": "integer",
            "example": 3
          },
          "childCategory": {
            "type": "integer",
            "example": 19
          },
          "bearing": {
            "type": "number",
            "example": 1
          },
          "accuracy": {
            "type": "integer",
            "example": 1
          },
          "platform": {
            "type": "string",
            "example": "104"
          }
        }
      },
      "Report-GET-AllReportsAtAPlace-Response": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "41bf26746823dbe346ed092e5ee5cceb"
                },
                "placeName": {
                  "type": "string",
                  "example": "Indianotion Communications 43 Appareddipalya Indiranagar Bengaluru Karnataka"
                },
                "eventId": {
                  "type": "integer",
                  "example": null
                },
                "placeId": {
                  "type": "string",
                  "example": "E34S58"
                },
                "description": {
                  "type": "string",
                  "example": "Add New POI Unique Wheel Alignment Centre - Multi Brand Car Service Station."
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.637
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.637
                },
                "parentCategory": {
                  "type": "integer",
                  "example": "1"
                },
                "childCategory": {
                  "type": "integer",
                  "example": "7"
                },
                "subChildCategory": {
                  "type": "integer",
                  "example": null
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "format": "long",
                  "example": 1492508800
                },
                "addedBy": {
                  "type": "string",
                  "example": "biswanath@mmi"
                },
                "addedByName": {
                  "type": "string",
                  "example": "Biswanath"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/biswanath@mmi/avatar"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "https://s3.ap-south-1.amazonaws.com/mmi-explore-images/pin/report/original/94f6172338c7c3bf.jpg,<br> https://s3.ap-south-1.amazonaws.com/mmi-explore-images/pin/report/original/80dbf9af0375bd38.jpg"
                  }
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": null
                  }
                },
                "audios": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": null
                  }
                },
                "source": {
                  "type": "string",
                  "example": null
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 0
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "usersCount": {
                  "type": "integer",
                  "example": null
                },
                "picturesCount": {
                  "type": "integer",
                  "example": 2
                },
                "audiosCount": {
                  "type": "integer"
                },
                "videosCount": {
                  "type": "integer",
                  "example": 0
                },
                "thumbnail": {
                  "type": "integer",
                  "example": "https://s3.ap-south-1.amazonaws.com/mmi-explore-images/pins/41bf26746823dbe346ed092e5ee5cceb.png"
                },
                "managerStatus": {
                  "type": "string",
                  "example": null
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 1
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "baseURLObj": {
            "type": "object",
            "example": "https://anchor.mapmyindia.com/api/users/"
          }
        }
      },
      "Report-GET-reportCatMaster-Response": {
        "type": "object",
        "properties": {
          "baseURLObj": {
            "type": "object",
            "properties": {
              "icon_url": {
                "type": "string",
                "example": "https://mmi-explore-images.s3.ap-south-1.amazonaws.com/reports/"
              }
            }
          },
          "parentCategories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 11
                },
                "name": {
                  "type": "string",
                  "example": "UNICEF School Closure"
                },
                "icon": {
                  "type": "string",
                  "example": "11.png"
                },
                "childCategories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 96
                      },
                      "name": {
                        "type": "string",
                        "example": "School Closure"
                      },
                      "icon": {
                        "type": "string",
                        "example": "11_96.png"
                      },
                      "desc": {
                        "type": "string",
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Report-PATCH-UpdateReport-Request": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Wow description"
          },
          "parentCategory": {
            "type": "integer",
            "example": 2
          },
          "childCategory": {
            "type": "integer",
            "example": 13
          },
          "platform": {
            "type": "integer",
            "example": 101
          },
          "expiry": {
            "type": "integer",
            "format": "long",
            "example": 10202021
          },
          "broadcast": {
            "type": "string",
            "example": "public"
          }
        }
      },
      "Report-GET-NearbyReports-Response": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "018e685b70db78cbcf699f80ffeb2f49"
                },
                "placeName": {
                  "type": "string",
                  "example": "Dr Sandip Guptqa"
                },
                "eventId": {
                  "type": "integer",
                  "example": 1301
                },
                "placeId": {
                  "type": "string",
                  "example": "Z6WW94"
                },
                "description": {
                  "type": "string",
                  "example": "Please check this poi name. Dr Sandip Guptqa. Its spell mistake. It should be Gupa not Guptqa."
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 28.56256828
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.26343738
                },
                "parentCategory": {
                  "type": "integer",
                  "example": "1"
                },
                "childCategory": {
                  "type": "integer",
                  "example": "6"
                },
                "subChildCategory": {
                  "type": "integer",
                  "example": 11
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "format": "long",
                  "example": 1511773404
                },
                "addedBy": {
                  "type": "string",
                  "example": "rameshc886"
                },
                "addedByName": {
                  "type": "string",
                  "example": "rameshc"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/rameshc886/avatar"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "audios": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "source": {
                  "type": "string",
                  "example": null
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 0
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "usersCount": {
                  "type": "integer",
                  "example": null
                },
                "picturesCount": {
                  "type": "integer",
                  "example": null
                },
                "audiosCount": {
                  "type": "integer",
                  "example": null
                },
                "videosCount": {
                  "type": "integer",
                  "example": null
                },
                "thumbnail": {
                  "type": "integer",
                  "example": null
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 1
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "baseURLObj": {
            "type": "object",
            "properties": {
              "assets": {
                "type": "string",
                "example": "https://anchor.mapmyindia.com/api/users/"
              }
            }
          }
        }
      },
      "GET-AllListOfAUser-Response": {
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "listName": {
                  "type": "string",
                  "example": "Contributions"
                },
                "privacy": {
                  "type": "integer",
                  "example": 1
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1462857748
                },
                "itemCount": {
                  "type": "integer",
                  "example": 73
                },
                "listId": {
                  "type": "string",
                  "example": "73bf71ca812c4810071df8ac054171d3"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 4
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "GET-AllItemsOfAList-Response": {
        "type": "object",
        "properties": {
          "listItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "placeName": {
                  "type": "string",
                  "example": "B71"
                },
                "eLoc": {
                  "type": "string",
                  "example": "MMI000"
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 23.199028
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 75.7897076
                },
                "listName": {
                  "type": "string",
                  "example": "Favourites"
                },
                "itemId": {
                  "type": "string",
                  "example": "5a4d35da5026d24a3e540ad3a578d5e8"
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1585294212
                },
                "rating": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 13
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 2
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "GET-AllSavedItems-Response": {
        "type": "object",
        "properties": {
          "listItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "placeName": {
                  "type": "string",
                  "example": "Rajiv Gandhi International Airport"
                },
                "eLoc": {
                  "type": "string",
                  "example": "ESDTTT"
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 17.235892
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 78.429646
                },
                "listName": {
                  "type": "string",
                  "example": "Favourites"
                },
                "itemId": {
                  "type": "string",
                  "example": "4f31aabc37f96e4cec2f6086760d61714"
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1573537145
                },
                "rating": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 1
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "List-PATCH-UpdateList-Request": {
        "type": "object",
        "properties": {
          "listName": {
            "type": "string",
            "example": "wonder List,Testing123"
          },
          "privacy": {
            "type": "integer",
            "example": 1
          },
          "platform": {
            "type": "integer",
            "example": 101
          }
        }
      },
      "List-POST-CreateList-Request": {
        "type": "object",
        "properties": {
          "eLoc": {
            "type": "string",
            "example": "1T182A"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": "28.7041"
          },
          "listName": {
            "type": "string",
            "example": "wonder list"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": "77.1025"
          },
          "placeName": {
            "type": "string",
            "example": "Delhi"
          },
          "platform": {
            "type": "integer",
            "example": 101
          },
          "privacy": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "List-POST-AddItemToList-Request": {
        "type": "object",
        "properties": {
          "placeName": {
            "type": "string",
            "example": "test place"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": "28.7041"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": "77.1025"
          },
          "listId": {
            "type": "string",
            "example": "791c4990ae4a018535b933908f332f97"
          },
          "platform": {
            "type": "integer",
            "example": 101
          }
        }
      },
      "Place-GET-PlaceCategories-Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "parentName": {
              "type": "string",
              "example": "Government,"
            },
            "parentCode": {
              "type": "string",
              "example": "COMGOV,"
            },
            "childCategories": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "childCode": {
                    "type": "string",
                    "example": "GOVMJR"
                  },
                  "childName": {
                    "type": "string",
                    "example": "Government Office"
                  }
                }
              }
            }
          }
        }
      },
      "Place-GET-Leader-Dashboard-Response": {
        "type": "object",
        "properties": {
          "userPoints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "points": {
                  "type": "object",
                  "properties": {
                    "checkins": {
                      "type": "string",
                      "example": 0
                    },
                    "events": {
                      "type": "string",
                      "example": 0
                    },
                    "favCount": {
                      "type": "integer",
                      "example": 0
                    },
                    "followers": {
                      "type": "integer",
                      "example": 0
                    },
                    "followings": {
                      "type": "integer",
                      "example": 0
                    },
                    "home": {
                      "type": "string",
                      "example": null
                    },
                    "imagesCount": {
                      "type": "integer",
                      "example": 1595
                    },
                    "isFollowedByMe": {
                      "type": "boolean",
                      "example": false
                    },
                    "isFollowsYou": {
                      "type": "boolean",
                      "example": false
                    },
                    "last_rank": {
                      "type": "integer",
                      "example": 7
                    },
                    "listCount": {
                      "type": "integer",
                      "example": 4
                    },
                    "listItems": {
                      "type": "integer",
                      "example": 0
                    },
                    "office": {
                      "type": "string",
                      "example": null
                    },
                    "placeCount": {
                      "type": "integer",
                      "example": 4
                    },
                    "rank": {
                      "type": "integer",
                      "example": 7
                    },
                    "reports": {
                      "type": "integer",
                      "example": 3260
                    },
                    "reviews": {
                      "type": "integer",
                      "example": 0
                    },
                    "totalContribution": {
                      "type": "integer",
                      "example": 4
                    },
                    "totalFlag": {
                      "type": "integer",
                      "example": 0
                    },
                    "totalLike": {
                      "type": "integer",
                      "example": 0
                    },
                    "totalPoints": {
                      "type": "integer",
                      "example": 4863
                    },
                    "user_name": {
                      "type": "string",
                      "example": "vimalgisee949821551"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Place-POST-AddAPlace-Request": {
        "type": "object",
        "required": [
          "placeType",
          "placeCatCode",
          "placeName",
          "address",
          "latitude",
          "longitude",
          "platform"
        ],
        "properties": {
          "placeName": {
            "type": "string",
            "example": "Lal Qila",
            "description": "Name of the place."
          },
          "placeType": {
            "type": "integer",
            "example": 1,
            "description": "Type of the place. Allowed values: 0(Residential), 1(Non-Residential)"
          },
          "placeCatCode": {
            "type": "string",
            "example": "HISFRT",
            "description": "Hyphon separated Category and Sub-category Code of the place. e.g.: RESLCS-LCSAPT OR RESLCS."
          },
          "knownAs": {
            "type": "string",
            "example": "Red Fort",
            "description": "Popular name of the place."
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 26.9041,
            "description": "Latitude of the user location."
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 77.1125,
            "description": "Longitude of the user location."
          },
          "address": {
            "type": "string",
            "example": "Netaji Subhash Road, Chandni Chowk, New Delhi, Delhi, 110006",
            "description": "Address of the place to add."
          },
          "houseNumber": {
            "type": "string",
            "example": "222",
            "description": "House number of the place."
          },
          "doorNumber": {
            "type": "string",
            "example": "",
            "description": "Door number of the place."
          },
          "floorNumber": {
            "type": "string",
            "example": "",
            "description": "Floor number of the place."
          },
          "streetName": {
            "type": "string",
            "format": "Netaji Subhash Road",
            "example": "Red fort road",
            "description": "Street name of the place."
          },
          "village": {
            "type": "string",
            "example": "",
            "description": "Village name of the place (For Rural Areas)."
          },
          "locality": {
            "type": "string",
            "example": "Chandni Chowk",
            "description": "Locality name of the place (For Urban Areas)."
          },
          "city": {
            "type": "string",
            "example": "Delhi",
            "description": "City name of the place (For Urban Areas)."
          },
          "district": {
            "type": "string",
            "example": "North Delhi",
            "description": "District name of the place (For Rular Areas)."
          },
          "state": {
            "type": "string",
            "example": "Delhi",
            "description": "State name of the place."
          },
          "pincode": {
            "type": "string",
            "example": 110006,
            "description": "Postal Code of the place."
          },
          "nearestLandmark": {
            "type": "string",
            "example": "Lal Qila Metro Station Gate No.- 1",
            "description": "Nearest landmark of the place."
          },
          "phone": {
            "type": "string",
            "example": "+911123277705,+911123277706",
            "description": "Phone number if any of the place."
          },
          "email": {
            "type": "string",
            "description": "Email if any of the place."
          },
          "website": {
            "type": "string",
            "example": "www.asi.nic.in",
            "description": "Website if any of the place."
          },
          "openingHours": {
            "type": "object",
            "description": "List of days of opening hours object.",
            "properties": {
              "specificInterval": {
                "type": "string",
                "example": "null, //0-Open Always, 1-During Day, 2-During Night, null-if days info provided"
              },
              "monday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "opens": {
                      "type": "string",
                      "example": "9:30 AM"
                    },
                    "closes": {
                      "type": "string",
                      "example": "1:30 PM"
                    }
                  }
                }
              },
              "tuesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "opens": {
                      "type": "string",
                      "example": "9:30 AM"
                    },
                    "closes": {
                      "type": "string",
                      "example": "1:30 PM"
                    }
                  }
                }
              },
              "wednesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "opens": {
                      "type": "string",
                      "example": "9:30 AM"
                    },
                    "closes": {
                      "type": "string",
                      "example": "1:30 PM"
                    }
                  }
                }
              },
              "thrusday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "opens": {
                      "type": "string",
                      "example": "9:30 AM"
                    },
                    "closes": {
                      "type": "string",
                      "example": "1:30 PM"
                    }
                  }
                }
              },
              "friday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "opens": {
                      "type": "string",
                      "example": "9:30 AM"
                    },
                    "closes": {
                      "type": "string",
                      "example": "1:30 PM"
                    }
                  }
                }
              },
              "saturday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "opens": {
                      "type": "string",
                      "example": "9:30 AM"
                    },
                    "closes": {
                      "type": "string",
                      "example": "1:30 PM"
                    }
                  }
                }
              },
              "sunday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "example": "close"
                }
              }
            }
          },
          "customFields": {
            "type": "object",
            "description": "List of key value pairs of used added input.",
            "properties": {
              "myPlace": {
                "type": "string",
                "example": "wonders"
              }
            }
          },
          "description": {
            "type": "string",
            "example": "Nice place to hangout",
            "description": "A short description about the place. Size range: 10..250"
          },
          "rating": {
            "type": "integer",
            "example": "5",
            "description": "Star Rating of the place."
          },
          "paymentMode": {
            "type": "object",
            "description": "Payment modes accepted for the place.",
            "properties": {
              "cash": {
                "type": "integer",
                "example": 0
              },
              "creditcard": {
                "type": "integer",
                "example": 0
              },
              "wallet": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "cost": {
            "type": "integer",
            "example": 100,
            "description": "Cost to access the place."
          },
          "cuisines": {
            "type": "string",
            "example": "Indian,Mughlai",
            "description": "List of Cusines available at the place."
          },
          "amenities": {
            "type": "object",
            "description": "Amenities available for the place.",
            "properties": {
              "isParkingAvail": {
                "type": "integer",
                "example": 1
              },
              "parkingDetails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vehicleType": {
                      "type": "string",
                      "example": "two-wheeler"
                    },
                    "rateUnitType": {
                      "type": "string",
                      "example": "hours"
                    },
                    "rateUnitRanges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rateUnitRange": {
                            "type": "string",
                            "example": "0-6,"
                          },
                          "rateUnitCost": {
                            "type": "integer",
                            "example": 50
                          }
                        }
                      }
                    },
                    "rateUnitRange": {
                      "type": "string",
                      "example": "7-12,"
                    },
                    "rateUnitCost": {
                      "type": "integer",
                      "example": 100
                    }
                  }
                }
              },
              "isWheelchairAccess": {
                "type": "integer",
                "example": 1
              },
              "isRestroomAvail": {
                "type": "integer",
                "example": 0
              },
              "isSmokingZoneAvail": {
                "type": "integer",
                "example": 0
              },
              "isValetParkingAvail": {
                "type": "integer",
                "example": 1
              },
              "isAlcoholServed": {
                "type": "integer",
                "example": 0
              },
              "isDeliveryAvail": {
                "type": "integer",
                "example": 0
              },
              "isPureVeg": {
                "type": "integer",
                "example": 0
              },
              "isOutdoorSittingAvail": {
                "type": "integer",
                "example": 1
              },
              "isHappyHours": {
                "type": "integer",
                "example": 1
              },
              "happyHoursDetails": {
                "type": "object",
                "properties": {
                  "monday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": null
                    }
                  },
                  "tuesday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": null
                    }
                  },
                  "wednesday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": null
                    }
                  },
                  "thrusday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": null
                    }
                  },
                  "friday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": null
                    }
                  },
                  "saturday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": null
                    }
                  },
                  "sunday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "platform": {
            "type": "integer",
            "example": 101,
            "enum": [
              101,
              104,
              111,
              112,
              121
            ],
            "description": "Platfrom from which request is being made. Allowed values: 101(Android), 104(IOS), 111(ExploreWeb), 112(MapWeb), 121(Traffic)"
          },
          "altitude": {
            "type": "string",
            "description": "Altitude of the location, in meters.",
            "example": ""
          },
          "altitudeAccuracy": {
            "type": "string",
            "example": "",
            "description": "Vertical accuracy of the user location, in meters."
          },
          "locationAccuracy": {
            "type": "string",
            "example": "",
            "description": "Accuracy of the  latitude and longitude, in meter."
          }
        }
      },
      "Place-PATCH-EditAPlace-Request": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "A-237 okhla phase 3"
          },
          "description": {
            "type": "string",
            "example": "Head office of MMI"
          },
          "district": {
            "type": "string",
            "example": "South North delhi"
          }
        }
      },
      "Review-GET-AllReviewOfAUser-Response": {
        "type": "object",
        "properties": {
          "reviews": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "placeName": {
                  "type": "string",
                  "example": "WelcomHeritage Sheikhpura Kothi"
                },
                "placeId": {
                  "type": "string",
                  "example": "937X7UA"
                },
                "description": {
                  "type": "string",
                  "example": "Awesome place to spend weekend with family and friends"
                },
                "rating": {
                  "type": "integer",
                  "example": 5
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 29.114179
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 75.994535
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1586537206
                },
                "addedByName": {
                  "type": "string",
                  "example": "Isha"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/ishar081/avatar"
                },
                "addedBy": {
                  "type": "string",
                  "example": "ishar081"
                },
                "name": {
                  "type": "string",
                  "example": "isha"
                },
                "userName": {
                  "type": "string",
                  "example": "ishar081"
                },
                "liked": {
                  "type": "boolean",
                  "example": true
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 1
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "resourceLocation": {
                  "type": "string",
                  "example": "https://explore.mapmyindia.com/api/v2.1.0.0/places/review/df0c3327a8f853b832f713507503ec71"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItem": {
                "type": "integer",
                "example": 76
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 8
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "Review-GET-SingleReviewDetails-Response": {
        "type": "object",
        "properties": {
          "placeName": {
            "type": "string",
            "example": "MapmyIndia Head Office New Delhi"
          },
          "placeId": {
            "type": "string",
            "example": "MMI000"
          },
          "description": {
            "type": "string",
            "example": "Great place"
          },
          "rating": {
            "type": "integer",
            "example": 5
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 28.550716
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 77.268928
          },
          "status": {
            "type": "string",
            "example": "published"
          },
          "createdOn": {
            "type": "integer",
            "example": 1584004016
          },
          "addedByName": {
            "type": "string",
            "example": "Vaibhav Singla"
          },
          "photo": {
            "type": "string",
            "example": "https://anchor.mapmyindia.com/api/users/vaibhav.singla_1578979903/avatar"
          },
          "addedBy": {
            "type": "string",
            "example": "vaibhav.singla_1578979903"
          },
          "name": {
            "type": "string",
            "example": "Vaibhav Singla"
          },
          "userName": {
            "type": "string",
            "example": "vaibhav.singla_1578979903"
          },
          "pictures": {
            "type": "string",
            "example": []
          },
          "audios": {
            "type": "string",
            "example": []
          },
          "videos": {
            "type": "string",
            "example": []
          },
          "liked": {
            "type": "boolean",
            "example": false
          },
          "flagged": {
            "type": "boolean",
            "example": false
          },
          "likeCount": {
            "type": "integer",
            "example": 5
          },
          "flagCount": {
            "type": "integer",
            "example": 6
          },
          "resourceLocation": {
            "type": "string",
            "example": "https://explore.mapmyindia.com/api/v2.1.0.0/places/review/2e7bb5c72d44a1a56018d1037ec9acb5"
          },
          "origin": {
            "type": "string",
            "example": 1
          },
          "picturesCount": {
            "type": "integer",
            "example": 0
          },
          "audiosCount": {
            "type": "integer",
            "example": 0
          },
          "videosCount": {
            "type": "integer",
            "example": 0
          },
          "thumbnail": {
            "type": "string",
            "example": "https://s3.ap-south-1.amazonaws.com/mmi-explore-images/pins/2e7bb5c72d44a1a56018d1037ec9acb5.png"
          }
        }
      },
      "GET-PlaceDetail-Response": {
        "type": "object",
        "properties": {
          "images": {
            "type": "object",
            "properties": {
              "assets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addedByURL": {
                      "type": "string",
                      "example": "https://maps.mapmyindia.com/babammi"
                    },
                    "addedByName": {
                      "type": "string",
                      "example": "Rakesh Sharma"
                    },
                    "sourceType": {
                      "type": "string",
                      "example": "MapmyIndia"
                    },
                    "origin": {
                      "type": "number",
                      "example": 1
                    },
                    "caption": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "place"
                    },
                    "originLogo": {
                      "type": "string"
                    },
                    "addedOn": {
                      "type": "integer",
                      "example": 1556044016
                    },
                    "imageObject": {
                      "type": "object",
                      "properties": {
                        "width": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "example": "https://maps.mapmyindia.com/place/1T182A_1556044015873_0.jpg"
                        },
                        "height": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "totalItems": {
                    "type": "integer",
                    "example": 16
                  },
                  "perPage": {
                    "type": "integer",
                    "example": 10
                  },
                  "totalPages": {
                    "type": "integer",
                    "example": 2
                  },
                  "currentPage": {
                    "type": "string",
                    "example": 1
                  }
                }
              },
              "eloc": {
                "type": "string",
                "example": "1T182A"
              },
              "updatedOn": {
                "type": "integer",
                "example": 1560233495062
              },
              "createdOn": {
                "type": "integer",
                "example": 1560233495062
              }
            }
          },
          "baseURLObj": {
            "type": "object",
            "properties": {
              "keyinfo": {
                "type": "string",
                "example": "https://mmi-explore-images.s3.ap-south-1.amazonaws.com/key_info/"
              },
              "review": {
                "type": "string",
                "example": "https://maps.mapmyindia.com/review/"
              },
              "place": {
                "type": "string",
                "example": "https://maps.mapmyindia.com/place/"
              }
            }
          },
          "claimInfo": {
            "type": "array",
            "items": {
              "properties": {
                "claimId": {
                  "type": "string",
                  "example": "2565a14c-64eb-4572-b510-2b0d48cc9f2e"
                },
                "level": {
                  "type": "string",
                  "example": "TestLevel"
                },
                "designation": {
                  "type": "string",
                  "example": "TestDesignation"
                },
                "description": {
                  "type": "string",
                  "example": "TestDescription"
                },
                "name": {
                  "type": "string",
                  "example": "Adarsh Chaube"
                },
                "userName": {
                  "type": "string",
                  "example": "chaubeadarsh43"
                },
                "userPhoto": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/chaubeadarsh43/avatar"
                },
                "phoneNo": {
                  "type": "string",
                  "example": 901374568
                },
                "email": {
                  "type": "string",
                  "example": "abc@gmail.com"
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1582102147
                },
                "updatedOn": {
                  "type": "string",
                  "example": 1582102147
                },
                "status": {
                  "type": "integer",
                  "example": 0
                },
                "placeId": {
                  "type": "string"
                },
                "placeName": {
                  "type": "string"
                },
                "latitude": {
                  "type": "number",
                  "format": "double"
                },
                "longitude": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "generalDetails": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "HISMON"
              },
              "city": {
                "type": "string",
                "example": "New Delhi"
              },
              "similarPlaces": {
                "type": "string"
              },
              "latitude": {
                "type": "number",
                "format": "double",
                "example": 28.612964
              },
              "houseNumber": {
                "type": "string"
              },
              "placeId": {
                "type": "string",
                "example": "1T182A"
              },
              "poi": {
                "type": "string",
                "example": "India Gate"
              },
              "type": {
                "type": "string",
                "example": "POI"
              },
              "responseCode": {
                "type": "integer",
                "example": 200
              },
              "houseName": {
                "type": "string"
              },
              "formattedAddress": {
                "type": "string",
                "example": "Rajpath Marg, New Delhi, Delhi, 110001"
              },
              "eLat": {
                "type": "number",
                "format": "double",
                "example": 28.613058
              },
              "popularName": {
                "type": "string"
              },
              "street": {
                "type": "string",
                "example": "India Gate Circle"
              },
              "state": {
                "type": "string",
                "example": "Delhi"
              },
              "village": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "longitude": {
                "type": "number",
                "format": "double",
                "example": 77.2294630000001
              },
              "pincode": {
                "type": "integer",
                "example": "110001"
              },
              "website": {
                "type": "string"
              },
              "address": {
                "type": "string",
                "example": "Rajpath Marg, New Delhi, Delhi, 110001"
              },
              "subLocality": {
                "type": "string",
                "example": ""
              },
              "locality": {
                "type": "string",
                "example": ""
              },
              "telephone": {
                "type": "string",
                "example": "+911123365358"
              },
              "eLng": {
                "type": "number",
                "format": "double",
                "example": 77.227738
              },
              "subSubLocality": {
                "type": "string",
                "example": ""
              },
              "district": {
                "type": "string",
                "example": "New Delhi District"
              },
              "floorNo": {
                "type": "integer",
                "example": ""
              },
              "doorNo": {
                "type": "integer",
                "example": ""
              },
              "placeName": {
                "type": "string",
                "example": "India Gate"
              },
              "subDistrict": {
                "type": "string",
                "example": "Connaught Place"
              }
            }
          },
          "richData": {
            "type": "object",
            "properties": {
              "countInfo": {
                "type": "object",
                "properties": {
                  "starCount": {
                    "type": "object",
                    "properties": {
                      "oneStar": {
                        "type": "integer",
                        "example": 61
                      },
                      "twoStar": {
                        "type": "integer",
                        "example": 220
                      },
                      "threeStar": {
                        "type": "integer",
                        "example": 1796
                      },
                      "fourStar": {
                        "type": "integer",
                        "example": 3386
                      },
                      "fiveStar": {
                        "type": "integer",
                        "example": 4354
                      }
                    }
                  },
                  "checkinCount": {
                    "type": "integer",
                    "example": 61
                  },
                  "favouriteCount": {
                    "type": "integer",
                    "example": 20
                  },
                  "reviewCount": {
                    "type": "integer",
                    "example": 9817
                  },
                  "avgRating": {
                    "type": "integer",
                    "example": 4
                  },
                  "reportCount": {
                    "type": "integer",
                    "example": 19
                  }
                }
              },
              "description": {
                "type": "string",
                "example": "The India Gate, built in 1931 and designed by Sir Edwin Lutyens, was inspired by the Arc de Triomphe. It commemorates India's war dead and houses an eternal flame."
              },
              "events": {
                "type": "string",
                "example": null
              },
              "reports": {
                "type": "string",
                "example": null
              },
              "origin": {
                "type": "string",
                "example": "tripadvisor"
              },
              "originLogUrl": {
                "type": "string",
                "example": "/logourl/"
              },
              "rankingData": {
                "type": "string",
                "example": null
              },
              "reviews": {
                "type": "array",
                "items": {
                  "properties": {
                    "lang": {
                      "type": "string",
                      "example": "eng"
                    },
                    "eventId": {
                      "type": "string",
                      "example": null
                    },
                    "placeId": {
                      "type": "string",
                      "example": "1T182A"
                    },
                    "title": {
                      "type": "string",
                      "example": ""
                    },
                    "description": {
                      "type": "string",
                      "example": ""
                    },
                    "rating": {
                      "type": "integer",
                      "example": 5
                    },
                    "latitude": {
                      "type": "number",
                      "example": 28.612964
                    },
                    "longitude": {
                      "type": "number",
                      "example": 77.229463
                    },
                    "status": {
                      "type": "string",
                      "example": "published"
                    },
                    "userName": {
                      "type": "string",
                      "example": "cijabe_1565243606"
                    },
                    "name": {
                      "type": "string",
                      "example": "Cijabe2"
                    },
                    "photo": {
                      "type": "string",
                      "example": null
                    },
                    "pictures": {
                      "type": "string",
                      "example": null
                    },
                    "videos": {
                      "type": "string",
                      "example": null
                    },
                    "createdOn": {
                      "type": "integer",
                      "example": 1570630567
                    },
                    "updatedOn": {
                      "type": "integer",
                      "example": null
                    },
                    "liked": {
                      "type": "boolean",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "example": false
                    },
                    "likeCount": {
                      "type": "integer",
                      "example": 0
                    },
                    "flagCount": {
                      "type": "integer",
                      "example": 0
                    },
                    "resourceLocation": {
                      "type": "string",
                      "example": "/places/review/e66296075641bb6051a3103ad007c431"
                    },
                    "origin": {
                      "type": "integer",
                      "example": 1
                    },
                    "tripType": {
                      "type": "string",
                      "example": "management"
                    }
                  }
                }
              },
              "seeAllPhotos": {
                "type": "object"
              }
            }
          },
          "keyInfo": {
            "type": "array",
            "items": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "icon": {
                        "type": "string",
                        "example": "ic_timings.png"
                      },
                      "title": {
                        "type": "string",
                        "example": "Timings"
                      },
                      "value": {
                        "type": "string",
                        "example": "Morning to Night"
                      }
                    }
                  }
                },
                "heading": {
                  "type": "string",
                  "example": "Opening Hours"
                },
                "style": {
                  "type": "string",
                  "example": "icon_with_one_lines"
                }
              }
            }
          },
          "version": {
            "type": "string",
            "example": "211.16"
          },
          "originObj": {
            "type": "array",
            "items": {
              "properties": {
                "displayName": {
                  "type": "string",
                  "example": "MapmyIndia"
                },
                "logo": {
                  "type": "string",
                  "example": "https://mmi-explore-images.s3.ap-south-1.amazonaws.com/key_info/ic_mmi.png"
                }
              }
            }
          },
          "status": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "02e1b597-2b20-42bd-9954-ff8ff82f9d1b"
                },
                "place_staus": {
                  "type": "string",
                  "example": "Test Status Another"
                },
                "pin_type": {
                  "type": "string",
                  "example": "status"
                },
                "platform": {
                  "type": "integer",
                  "example": 101
                },
                "place_id": {
                  "type": "string",
                  "example": "1T182A"
                },
                "pin_create_date": {
                  "type": "string",
                  "example": "2020-01-09 11:25:53"
                },
                "user_name": {
                  "type": "string",
                  "example": "sumeet0369"
                },
                "name": {
                  "type": "string",
                  "example": "Sumeet Sinha Ji"
                },
                "updated_on": {
                  "type": "integer",
                  "example": 1578549353198
                }
              }
            }
          }
        }
      },
      "POST-CreateClaim-Request": {
        "type": "object",
        "properties": {
          "claimerName": {
            "type": "string",
            "example": "ankit"
          },
          "claimerLevel": {
            "type": "string",
            "example": "Owner"
          },
          "claimerDesignation": {
            "type": "string",
            "example": "TestDesignation"
          },
          "claimDescription": {
            "type": "string",
            "example": "This is an example of create claim"
          },
          "email": {
            "type": "string",
            "example": "ankit@mapmyindia.com"
          },
          "phoneNo": {
            "type": "integer",
            "example": "9898767898"
          },
          "platform": {
            "type": "string",
            "example": "104"
          },
          "placeName": {
            "type": "string",
            "example": "Okhla Phase 3"
          },
          "latitude": {
            "type": "string",
            "example": "28.5515740000001"
          },
          "latlong": {
            "type": "string",
            "example": "77.269148"
          }
        }
      },
      "GET-PlaceEnquiry-Response": {
        "type": "object",
        "properties": {
          "enquiries": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "fd48cd7f-677a-4b20-b3df-a503cc171e90"
                },
                "eventId": {
                  "type": "string",
                  "example": null
                },
                "placeId": {
                  "type": "string",
                  "example": "MMI000"
                },
                "placeName": {
                  "type": "string",
                  "example": "MapmyIndia Head Office New Delhi"
                },
                "description": {
                  "type": "string",
                  "example": "Head office of mapmyindia"
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 28.550716
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.268928
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "updatedOn": {
                  "type": "integer",
                  "example": 1612421719
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1612421719
                },
                "name": {
                  "type": "string",
                  "example": "ankit"
                },
                "photo": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "https://anchor.mapmyindia.com/api/users/pra17/avatar"
                  }
                },
                "userName": {
                  "type": "string",
                  "example": "ankit1993"
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likecount": {
                  "type": "integer",
                  "example": 0
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "paltform": {
                  "type": "string",
                  "example": "104"
                }
              }
            },
            "properties": {
              "id": {
                "type": "string",
                "example": "20d18f4b-263d-4e16-af6a-028b5b7fb0e5"
              },
              "eventId": {
                "type": "string",
                "example": null
              },
              "placeId": {
                "type": "string",
                "example": "MMI000"
              },
              "placeName": {
                "type": "string",
                "example": "MapmyIndia Head Office New Delhi"
              },
              "description": {
                "type": "string",
                "example": "Head office of mapmyindia"
              },
              "latitude": {
                "type": "number",
                "format": "double",
                "example": 28.550716
              },
              "longitude": {
                "type": "number",
                "format": "double",
                "example": 77.268928
              },
              "status": {
                "type": "string",
                "example": "published"
              },
              "updatedOn": {
                "type": "integer",
                "example": 1612421719
              },
              "createdOn": {
                "type": "integer",
                "example": 1612421719
              },
              "name": {
                "type": "string",
                "example": "ankit"
              },
              "photo": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/pra17/avatar"
                }
              },
              "userName": {
                "type": "string",
                "example": "ankit1993"
              },
              "liked": {
                "type": "boolean",
                "example": false
              },
              "flagged": {
                "type": "boolean",
                "example": false
              },
              "likecount": {
                "type": "integer",
                "example": 0
              },
              "flagCount": {
                "type": "integer",
                "example": 0
              },
              "paltform": {
                "type": "string",
                "example": "104"
              }
            }
          },
          "pagination": {
            "type": "object"
          }
        }
      },
      "POST-CreateEnquiry-Request": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "New Enquiry........!! 116"
          },
          "placeName": {
            "type": "string",
            "example": "statue"
          },
          "latitude": {
            "type": "number",
            "example": 13.081967,
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 80.279281
          },
          "platform": {
            "type": "string",
            "example": "121"
          }
        }
      },
      "GET-RelationWithUser-Response": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "object",
            "properties": {
              "totalReports": {
                "type": "integer",
                "example": 3
              },
              "totalReviews": {
                "type": "integer",
                "example": 13
              },
              "totalEnquiries": {
                "type": "integer",
                "example": 0
              },
              "review": {
                "$ref": "#/components/schemas/reviewResponse"
              },
              "report": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/reportResponse"
                }
              },
              "favourite": {
                "type": "boolean"
              },
              "edited": {
                "type": "boolean"
              },
              "saved": {
                "type": "boolean"
              },
              "reviewed": {
                "type": "boolean"
              },
              "reported": {
                "type": "boolean"
              },
              "event": {
                "type": "boolean"
              },
              "checkin": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "GET-AllReviewAtAPlace-Response": {
        "type": "object",
        "properties": {
          "reviews": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "placeName": {
                  "type": "string",
                  "example": "India Gate, New Delhi, Delhi"
                },
                "placeId": {
                  "type": "string",
                  "example": "1T182A"
                },
                "description": {
                  "type": "string",
                  "example": "Nice place"
                },
                "rating": {
                  "type": "integer",
                  "example": 4
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 28.612964
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.229463
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1566557004
                },
                "name": {
                  "type": "string",
                  "example": "prateek"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/gaurav123bzb/avatar"
                },
                "userName": {
                  "type": "string",
                  "example": "prateek276"
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 1
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "resourceLocation": {
                  "type": "string",
                  "example": "http://explore-uat.mapmyindia.in/api/v2.0.0.21/place/review/8914e285babb853d1165f7abc59540a3"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItem": {
                "type": "integer",
                "example": 9
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "PATCH-UpdateEnquiry-Request": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "update enquiry"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 28.612964
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 77.229463
          },
          "platform": {
            "type": "string",
            "example": "104"
          }
        }
      },
      "GET-GetRespondCommentOnPin-Response": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/commentResponse"
        }
      },
      "GET-UserClaims-Response": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 23
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 3
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "claims": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "claimId": {
                  "type": "string",
                  "example": "2f56ec45-28ef-4c33-a980-1622bb0e4822"
                },
                "level": {
                  "type": "string",
                  "example": "manager"
                },
                "designation": {
                  "type": "string",
                  "example": "TestDesignation"
                },
                "description": {
                  "type": "string",
                  "example": ""
                },
                "name": {
                  "type": "string",
                  "example": "adarsh"
                },
                "userName": {
                  "type": "string",
                  "example": "chaudbeadarsh42"
                },
                "userPhoto": {
                  "type": "string"
                },
                "phoneNo": {
                  "type": "string",
                  "example": "9878987678"
                },
                "email": {
                  "type": "string",
                  "example": "chaubeadarsh43@gmail.com"
                },
                "createdOn": {
                  "type": "string",
                  "example": "1594123134716"
                },
                "updatedOn": {
                  "type": "number",
                  "example": "1594123134716"
                },
                "status": {
                  "type": "integer",
                  "example": 1
                },
                "placeId": {
                  "type": "string",
                  "example": "JGBA1F"
                },
                "placeName": {
                  "type": "string",
                  "example": "Krishna Market, Kalkaji, New Delhi, Delhi, 110019"
                },
                "latitude": {
                  "type": "string",
                  "example": "28.541782"
                },
                "longtitude": {
                  "type": "string",
                  "example": "77.256103"
                }
              }
            }
          }
        }
      },
      "GET-UserEnquiries-Response": {
        "type": "object",
        "properties": {
          "enquiries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": null
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1611722924
                },
                "updatedOn": {
                  "type": "integer",
                  "example": 1612783713
                },
                "description": {
                  "type": "string",
                  "example": " Enquiry"
                },
                "eventId": {
                  "type": "string",
                  "example": null
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 13.081967
                },
                "likeCount": {
                  "type": "integer"
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 80.279281
                },
                "name": {
                  "type": "string",
                  "example": "Adarsh Chaube"
                },
                "photo": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "https://anchor.mapmyindia.com/api/users/chaubeadarsh43/avatar"
                  }
                },
                "userName": {
                  "type": "string",
                  "example": "chaubeadarsh43"
                },
                "pictures": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": null
                  }
                },
                "placeId": {
                  "type": "string",
                  "example": "OAFEAT"
                },
                "placeName": {
                  "type": "string",
                  "example": "Statue"
                },
                "platform": {
                  "type": "string",
                  "example": "121"
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            }
          },
          "pagination": {
            "type": "object"
          }
        }
      },
      "GET-ImagesAtAPlace-Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "addedByName": {
                    "type": "string",
                    "example": "Mohit Mishra"
                  },
                  "addedByURL": {
                    "type": "string",
                    "example": "https://maps.mapmyindia.com/mohit9891"
                  },
                  "addedOn": {
                    "type": "number",
                    "example": 1583324398
                  },
                  "imageOject": {
                    "type": "object",
                    "properties": {
                      "original": {
                        "type": "string",
                        "example": "https://maps.mapmyindia.com/explore/images/user_photos/review/original/7328a2b63974c7ea.jpg"
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "example": "review"
                  },
                  "source": {
                    "type": "string",
                    "example": "MapmyIndia"
                  },
                  "eloc": {
                    "type": "string",
                    "example": "MMI000"
                  },
                  "imageObj": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "properties": {
                "totalItem": {
                  "type": "integer",
                  "example": 11
                },
                "perPage": {
                  "type": "integer",
                  "example": 10
                },
                "totalPages": {
                  "type": "integer",
                  "example": 2
                },
                "currentPage": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        }
      },
      "GET-RouteReportSummary-Response": {
        "type": "object",
        "properties": {
          "routeId": {
            "type": "string",
            "example": "54b67e5d-6c63-11eb-b8b2-330fe1e6ee23_a17890d8b799dc13"
          },
          "routes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "index": {
                  "type": "integer"
                },
                "parentCategories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "parentCategory": {
                        "type": "integer",
                        "example": 6
                      },
                      "reports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "tpinN1164452207C48"
                            },
                            "childCategory": {
                              "type": "integer",
                              "example": 48
                            },
                            "placeName": {
                              "type": "string",
                              "example": "Ambadi Road"
                            },
                            "description": {
                              "type": "string",
                              "example": "Left Hand Curve"
                            },
                            "latitude": {
                              "type": "number",
                              "format": "double",
                              "example": 19.396109
                            },
                            "longitude": {
                              "type": "number",
                              "format": "double",
                              "example": 72.832792
                            },
                            "usersCount": {
                              "type": "integer",
                              "example": 1
                            },
                            "expiry": {
                              "type": "integer",
                              "example": 1614094896
                            },
                            "addedBy": {
                              "type": "string",
                              "example": "mapmyindia_traffic_center"
                            },
                            "addedByName": {
                              "type": "string",
                              "example": "MapmyIndia Traffic Center"
                            },
                            "photo": {
                              "type": "string",
                              "example": "trafficcenter.png"
                            },
                            "status": {
                              "type": "string",
                              "example": "published"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Get-User-Activity-Of-A-User-Response": {
        "type": "object",
        "properties": {
          "activity": {
            "type": "object",
            "properties": {
              "home": {
                "type": "string",
                "example": null
              },
              "office": {
                "type": "object",
                "properties": {
                  "entry_lat": {
                    "type": "number",
                    "format": "double",
                    "example": 0
                  },
                  "lng": {
                    "type": "number",
                    "format": "double",
                    "example": 77.2689280000001
                  },
                  "name": {
                    "type": "string",
                    "example": "MapmyIndia Head Office New Delhi"
                  },
                  "entry_lng": {
                    "type": "number",
                    "format": "double",
                    "example": 77.2689280000001
                  },
                  "openingHours": {
                    "type": "string",
                    "example": null
                  },
                  "updatedOn": {
                    "type": "integer",
                    "example": 1610084438
                  },
                  "lat": {
                    "type": "number",
                    "format": "double",
                    "example": 228.5507160000001
                  },
                  "place_id": {
                    "type": "string",
                    "example": "MMI000"
                  },
                  "platform": {
                    "type": "string",
                    "example": 101
                  }
                }
              }
            }
          },
          "checkins": {
            "type": "integer",
            "example": 2
          },
          "reviews": {
            "type": "integer",
            "example": 76
          },
          "reports": {
            "type": "integer",
            "example": 48
          },
          "followings": {
            "type": "integer",
            "example": 1
          },
          "followers": {
            "type": "integer",
            "example": 1
          },
          "listCount": {
            "type": "integer",
            "example": 0
          },
          "placeCount": {
            "type": "integer",
            "example": 0
          },
          "favCount": {
            "type": "integer",
            "example": 1
          },
          "events": {
            "type": "integer",
            "example": 0
          },
          "claims": {
            "type": "integer",
            "example": null
          },
          "userPhoto": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string",
                "example": "https://maps.mapmyindia.com/explore/images/user_photos/final/thumb/thumb_https://anchor.mapmyindia.com/api/users/ishar081/avatar"
              },
              "original": {
                "type": "string",
                "example": "https://maps.mapmyindia.com/explore/images/user_photos/final/original/https://anchor.mapmyindia.com/api/users/ishar081/avatar"
              },
              "medium": {
                "type": "string",
                "example": "https://maps.mapmyindia.com/explore/images/user_photos/final/medium/medium_https://anchor.mapmyindia.com/api/users/ishar081/avatar"
              }
            }
          },
          "followedByMe": {
            "type": "string",
            "example": false
          },
          "followsYou": {
            "type": "string",
            "example": false
          }
        }
      },
      "Invalid-Token-Response": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "example": 401
          },
          "error": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "type": "string",
                  "example": "self"
                },
                "reasonPhrase": {
                  "type": "string",
                  "example": "invalid_token"
                },
                "displayMessage": {
                  "type": "string",
                  "example": "Token was not recognised"
                }
              }
            }
          }
        }
      },
      "Internal-Server-Error-Response": {
        "type": "object",
        "properties": {
          "HTTP/1.1 500 INTERNAL SERVER ERROR": {
            "type": "string"
          }
        }
      },
      "Client-Error-Response": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "example": 400
          },
          "error": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "type": "string",
                  "example": "Field name"
                },
                "reasonPhrase": {
                  "type": "string",
                  "example": "Reason of failure"
                },
                "displayMessage": {
                  "type": "string",
                  "example": "Message to be shown"
                }
              }
            }
          }
        }
      },
      "Client-Error": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "example": 404
          },
          "error": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "type": "string",
                  "example": "self"
                },
                "reasonPhrase": {
                  "type": "string",
                  "example": "No result found"
                },
                "displayMessage": {
                  "type": "string",
                  "example": "Resorce not found."
                }
              }
            }
          }
        }
      },
      "No-Content": {
        "type": "object",
        "properties": {
          "HTTP/1.1 204 No Content": {
            "type": "string"
          }
        }
      },
      "User-All-followers-Of-A-User-Response": {
        "type": "object",
        "properties": {
          "followers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "since": {
                  "type": "integer",
                  "example": 1555999801
                },
                "name": {
                  "type": "string",
                  "example": "bastard"
                },
                "userName": {
                  "type": "string",
                  "example": "bastard123"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/bastard123/avatar"
                },
                "location": {
                  "type": "string",
                  "example": "Abhayapuri"
                },
                "about": {
                  "type": "string",
                  "example": "testing"
                },
                "followedByMe": {
                  "type": "string",
                  "example": false
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 1
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 10
              }
            }
          }
        }
      },
      "Get-User-All-following-Of-A-User-Response": {
        "type": "object",
        "properties": {
          "following": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "since": {
                  "type": "integer",
                  "example": 1612852903
                },
                "name": {
                  "type": "string",
                  "example": "AnkitKumar"
                },
                "userName": {
                  "type": "string",
                  "example": "ankit1993"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/ankit1993/avatar"
                },
                "location": {
                  "type": "string",
                  "example": "New Delhi"
                },
                "about": {
                  "type": "string",
                  "example": ""
                },
                "followedByMe": {
                  "type": "string",
                  "example": false
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 1
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "Get-User-My-Contribution-Response": {
        "type": "object",
        "properties": {
          "contribution": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "placeName": {
                  "type": "string",
                  "example": "Test 01"
                },
                "placeAddress": {
                  "type": "string",
                  "example": "Block A, Bhajanpura, New Delhi, Delhi pin-110053"
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 28.702831384992137
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "example": 77.25688147851679
                },
                "catName": {
                  "type": "string",
                  "example": null
                },
                "childCatName": {
                  "type": "string",
                  "example": null
                },
                "typeDisplayTxt": {
                  "type": "string",
                  "example": "ADDED PLACE"
                },
                "typeDisplayColor": {
                  "type": "string",
                  "example": null
                },
                "statusDisplayTxt": {
                  "type": "string",
                  "example": "SUpdated & Approved"
                },
                "statusTextColor": {
                  "type": "string",
                  "example": null
                },
                "createdOn": {
                  "type": "integer",
                  "example": 1608972579
                },
                "id": {
                  "type": "string",
                  "example": "158SMH"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 73
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 8
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "Get-User-My-Journey-Response": {
        "type": "object",
        "properties": {
          "journey": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "a54fd2bc-384a-4cd4-be8e-5f4b2e6e85a6"
                },
                "placeName": {
                  "type": "string",
                  "example": "Okhla NSIC Metro Station Gate No 1"
                },
                "placeId": {
                  "type": "string",
                  "example": "AMLM06"
                },
                "description": {
                  "type": "string",
                  "example": "Due to lockdown"
                },
                "rating": {
                  "type": "integer",
                  "format": "double",
                  "example": null
                },
                "parentCategory": {
                  "type": "integer",
                  "example": 5
                },
                "childCategory": {
                  "type": "integer",
                  "example": 37
                },
                "subChildCategory": {
                  "type": "integer",
                  "example": null
                },
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "example": 28.555031059401458
                },
                "longitude": {
                  "type": "integer",
                  "format": "double",
                  "example": 77.2654986355576
                },
                "type": {
                  "type": "string",
                  "example": "report"
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "format": "longer",
                  "example": 1588866840
                },
                "addedBy": {
                  "type": "string",
                  "example": "ishar081"
                },
                "addedByName": {
                  "type": "string",
                  "example": "Isha"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/ishar081/avatar"
                },
                "pictures": {
                  "type": "string",
                  "example": null
                },
                "videos": {
                  "type": "string",
                  "example": null
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 0
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "picturesCount": {
                  "type": "integer",
                  "example": 0
                },
                "audiosCount": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 84
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 9
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "Get-User-My-World-Response": {
        "type": "object",
        "properties": {
          "relevant": {
            "type": "integer",
            "example": 1
          },
          "world": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1988bdb4aeedd909e41e857688778f2b"
                },
                "placeName": {
                  "type": "string",
                  "example": "Urban Sip Cafe"
                },
                "placeId": {
                  "type": "string",
                  "example": "TPIGXI"
                },
                "description": {
                  "type": "string",
                  "example": "Love this place... Great ambiance.... And very cooperative staff....."
                },
                "rating": {
                  "type": "integer",
                  "format": "double",
                  "example": 4
                },
                "parentCategory": {
                  "type": "integer",
                  "example": 0
                },
                "childCategory": {
                  "type": "integer",
                  "example": 0
                },
                "subChildCategory": {
                  "type": "integer",
                  "example": null
                },
                "latitude": {
                  "type": "integer",
                  "format": "double",
                  "example": 28.550736
                },
                "longitude": {
                  "type": "integer",
                  "format": "double",
                  "example": 77.270738
                },
                "type": {
                  "type": "string",
                  "example": "review"
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "createdOn": {
                  "type": "integer",
                  "format": "longer",
                  "example": 1555495527
                },
                "addedBy": {
                  "type": "string",
                  "example": "neetika_singh0640"
                },
                "addedByName": {
                  "type": "string",
                  "example": "Neetika Singh"
                },
                "photo": {
                  "type": "string",
                  "example": "https://anchor.mapmyindia.com/api/users/neetika_singh0640/avatar"
                },
                "pictures": {
                  "type": "string",
                  "example": null
                },
                "videos": {
                  "type": "string",
                  "example": null
                },
                "liked": {
                  "type": "boolean",
                  "example": false
                },
                "flagged": {
                  "type": "boolean",
                  "example": false
                },
                "likeCount": {
                  "type": "integer",
                  "example": 2
                },
                "flagCount": {
                  "type": "integer",
                  "example": 0
                },
                "picturesCount": {
                  "type": "integer",
                  "example": 2
                },
                "audiosCount": {
                  "type": "integer",
                  "example": 2
                },
                "videosCount": {
                  "type": "integer",
                  "example": 0
                },
                "thumbnail": {
                  "type": "string",
                  "example": "https://s3.ap-south-1.amazonaws.com/mmi-explore-images/pins/da8b9d028ef0aacfa7109099d5531a54.png"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "totalItems": {
                "type": "integer",
                "example": 1097
              },
              "perPage": {
                "type": "integer",
                "example": 10
              },
              "totalPages": {
                "type": "integer",
                "example": 110
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "baseURLObj": {
            "type": "object",
            "properties": {
              "icon_url": {
                "type": "string",
                "example": "https://mmi-explore-images.s3.ap-south-1.amazonaws.com/reports/"
              },
              "assets": {
                "type": "string",
                "example": "https://anchor.mapmyindia.com/api/users/"
              }
            }
          }
        }
      },
      "commentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "f83ba686-1183-4b81-9582-20a418e7e485"
          },
          "status": {
            "type": "integer",
            "example": 1
          },
          "pin_type": {
            "type": "string",
            "example": "comment"
          },
          "parentPinId": {
            "type": "string",
            "example": "0b44ea2d7ae691079247686c03de6ee9"
          },
          "parentPinType": {
            "type": "string",
            "example": "review"
          },
          "name": {
            "type": "string",
            "example": "Venom"
          },
          "pin_create_date": {
            "type": "string",
            "example": "2020-11-25 20:42:40"
          },
          "liked": {
            "type": "boolean",
            "example": false
          },
          "flagged": {
            "type": "boolean",
            "example": false
          },
          "flagCount": {
            "type": "integer",
            "example": 0
          },
          "likeCount": {
            "type": "integer",
            "example": 0
          },
          "commentCount": {
            "type": "integer",
            "example": 1
          },
          "commented_on_pin": {
            "type": "string",
            "example": "0b44ea2d7ae691079247686c03de6ee9"
          },
          "respondTo": {
            "type": "string",
            "example": "apu_1592815795"
          },
          "respondToName": {
            "type": "string",
            "example": "Apu"
          },
          "platform": {
            "type": "integer",
            "example": 112
          },
          "createdOn": {
            "type": "integer",
            "example": 1606317160
          },
          "updatedOn": {
            "type": "integer",
            "example": 1606317160
          },
          "response": {
            "type": "string",
            "example": "s"
          },
          "placeId": {
            "type": "string",
            "example": "MMI000"
          },
          "userName": {
            "type": "string",
            "example": "venom_15882478"
          }
        }
      },
      "reviewResponse": {
        "type": "object",
        "properties": {
          "createdOn": {
            "type": "integer",
            "example": 1594200052
          },
          "description": {
            "type": "string",
            "example": "nice place"
          },
          "flagCount": {
            "type": "integer",
            "example": 10
          },
          "flagged": {
            "type": "boolean",
            "example": false
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 28.550716
          },
          "likeCount": {
            "type": "integer",
            "example": 0
          },
          "commentCount": {
            "type": "integer",
            "example": 7
          },
          "liked": {
            "type": "boolean",
            "example": false
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 77.268928
          },
          "name": {
            "type": "string",
            "example": "Apu"
          },
          "photo": {
            "type": "string",
            "example": "<https://anchor.mapmyindia.com/api/users                  /apu_1592815795/avatar>"
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "audios": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "picturesCount": {
            "type": "integer",
            "example": 0
          },
          "audiosCount": {
            "type": "integer",
            "example": 0
          },
          "videosCount": {
            "type": "integer",
            "example": 0
          },
          "placeId": {
            "type": "string",
            "example": "MMI000"
          },
          "placeName": {
            "type": "string",
            "example": "mapmyindia head office"
          },
          "rating": {
            "type": "integer"
          },
          "resourceLocation": {
            "type": "string",
            "example": "https://development.mapmyindia.com/apis/places/review/0b44ea2d7ae691079247686c03de6ee9"
          },
          "status": {
            "type": "string",
            "example": "published"
          },
          "userName": {
            "type": "string",
            "example": "apu_1592815795"
          },
          "comment": {
            "$ref": "#/components/schemas/commentResponse"
          }
        }
      },
      "get-AllReportResponse": {
        "type": "object",
        "properties": {
          "report": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/reportResponse"
            }
          }
        }
      },
      "reportResponse": {
        "type": "object",
        "properties": {
          "addedBy": {
            "type": "string",
            "example": "sumeet1992"
          },
          "addedByName": {
            "type": "string",
            "example": "Sumeet Jain"
          },
          "childCategory": {
            "type": "string",
            "example": "47"
          },
          "createdOn": {
            "type": "integer",
            "example": 1599818309
          },
          "description": {
            "type": "string",
            "example": "non public area"
          },
          "eventId": {
            "type": "string"
          },
          "flagCount": {
            "type": "integer",
            "example": 0
          },
          "flagged": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "example": "d0208ceb-de26-4be4-afe0-54cc9ab96323"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 28.550427809513195
          },
          "likeCount": {
            "type": "integer"
          },
          "commentCount": {
            "type": "integer"
          },
          "liked": {
            "type": "boolean"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 77.26895572359723
          },
          "parentCategory": {
            "type": "string",
            "example": "3"
          },
          "photo": {
            "type": "string",
            "example": "<https://anchor.mapmyindia.com/api/users                  /apu_1592815795/avatar>"
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "placeId": {
            "type": "string",
            "example": "MMI000"
          },
          "placeName": {
            "type": "string",
            "example": "mapmyindia"
          },
          "status": {
            "type": "string",
            "example": "published"
          },
          "subChildCategory": {
            "type": "string"
          },
          "usersCount": {
            "type": "integer",
            "example": 0
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "audios": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "managerStatus": {
            "type": "integer",
            "example": 0
          },
          "picturesCount": {
            "type": "integer",
            "example": 0
          },
          "audiosCount": {
            "type": "integer",
            "example": 0
          },
          "videosCount": {
            "type": "integer",
            "example": 0
          },
          "thumbnail": {
            "type": "string",
            "example": null
          },
          "comment": {
            "$ref": "#/components/schemas/commentResponse"
          }
        }
      }
    },
    "securitySchemes": {
      "mmi_auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://outpost.mapmyindia.com/api/security/oauth/token",
            "scopes": {
              "Read": "read authorization for API"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}
